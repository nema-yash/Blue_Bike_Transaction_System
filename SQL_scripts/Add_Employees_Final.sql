create or replace PROCEDURE ADD_EMPLOYEE(
F_NAME IN EMPLOYEE.FIRST_NAME%TYPE,
L_NAME IN EMPLOYEE.LAST_NAME%TYPE, 
MOB_NO IN NUMBER, 
EMAIL IN EMPLOYEE.EMAIL_ID%TYPE, 
DOB IN EMPLOYEE.DOB%TYPE, 
GENDER IN EMPLOYEE.GENDER%TYPE,  
DESIGNATION IN EMPLOYEE.DESIGNATION%TYPE,
REPORTING_MANAGER IN NUMBER DEFAULT NULL) 
AS
    E_ID NUMBER;
    EX_FNAME_NULL EXCEPTION;
    EX_LNAME_NULL EXCEPTION;
    USER_EXISTS_EXCEP EXCEPTION;
    VAL EMPLOYEE.EMPLOYEE_ID%TYPE;
    EMAIL_ISSUE EXCEPTION;
    MOB_NO_FORMAT EXCEPTION;
    INVALID_APPT_DATE EXCEPTION;
    EX_DESN_NULL EXCEPTION;
    EX_MANAGER_NULL EXCEPTION;
    TODAYS_DATE DATE := SYSDATE;
    VAL1 NUMBER;
    VAL2 EMPLOYEE.DOB%TYPE;
    appt_date DATE;

BEGIN
    EXECUTE IMMEDIATE ('SELECT COUNT(*) FROM EMPLOYEE') INTO VAL;
    
    IF VAL=0 THEN
        E_ID:=10000000;
    ELSIF VAL>0 THEN
        SELECT EMPLOYEE_ID INTO E_ID FROM EMPLOYEE WHERE EMPLOYEE_ID=(SELECT MAX(EMPLOYEE_ID) FROM EMPLOYEE);
        E_ID:=E_ID+1;
    END IF;

    
    IF LENGTH(UPPER(F_NAME)) IS NULL THEN
        RAISE EX_FNAME_NULL;
    END IF;

  
    IF LENGTH(UPPER(L_NAME)) IS NULL THEN
        RAISE EX_LNAME_NULL;
    END IF;


    EXECUTE IMMEDIATE ('SELECT COUNT(*) FROM EMPLOYEE WHERE UPPER(EMAIL_ID)=UPPER('''||EMAIL||''') ') INTO VAL1;
    
    IF VAL1>0 THEN
        RAISE USER_EXISTS_EXCEP;
    END IF;

  
    IF MOB_NO < 1000000000 OR MOB_NO>9999999999 THEN
        RAISE MOB_NO_FORMAT;
    END IF;

    EXECUTE IMMEDIATE ('SELECT COUNT(*) from (SELECT 1 from dual where REGEXP_LIKE ('''||EMAIL||''', ''^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$''))') INTO VAL1;

   
    IF LENGTH(UPPER(EMAIL)) IS NULL OR VAL1<1 THEN
        RAISE EMAIL_ISSUE;
    END IF;


    IF LENGTH(UPPER(DESIGNATION)) IS NULL THEN
        RAISE EX_DESN_NULL;
    END IF;
    
    


    --EXECUTE IMMEDIATE('SELECT COUNT(*) FROM (SELECT 1 FROM DUAL WHERE TO_NUMBER(TO_CHAR(TRUNC(SYSDATE-TO_DATE('''||DOB||''', ''DD-MON-YYYY HH24:MI:SS'')))) < 0)') INTO VAL1;
   -- EXECUTE IMMEDIATE('SELECT COUNT(*) FROM (SELECT 1 FROM DUAL WHERE TO_NUMBER(TO_CHAR(TRUNC(SYSDATE-'''||DOB||'''))) < 0)') INTO VAL1;

-- Appointment can not be scheduled in the past
		--appt_date :=  TO_DATE(appt_date_str,'dd-Mon-yyyy');
        
      
    IF trunc(DOB) > trunc(sysdate) THEN
        RAISE INVALID_APPT_DATE;
    END IF;


    --DBMS_OUTPUT.PUT_LINE('INSERT INTO EMPLOYEE VALUES ('||E_ID||','''||F_NAME||''','''||L_NAME||''','||MOB_NO||','''||EMAIL||''','''||DOB||''','''||GENDER||''','''||DESIGNATION||''',' || REPORTING_MANAGER ||')');
    INSERT INTO EMPLOYEE VALUES (E_ID,F_NAME,L_NAME,EMAIL,MOB_NO,DOB,GENDER,DESIGNATION,REPORTING_MANAGER,'AVAILABLE');
    COMMIT;

    EXCEPTION
    WHEN EX_FNAME_NULL THEN
        DBMS_OUTPUT.PUT_LINE('FIRST NAME CANNOT BE EMPTY');
    WHEN EX_LNAME_NULL THEN
        DBMS_OUTPUT.PUT_LINE('LAST NAME CANNOT BE EMPTY');
    WHEN USER_EXISTS_EXCEP THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE ALREADY EXISTS, CANNOT BE REGISTERED AS NEW EMPLOYEE');
    WHEN MOB_NO_FORMAT THEN
        DBMS_OUTPUT.PUT_LINE('MOBILE NUMBER CANNOT BE NEGATIVE OR GREATER THAN 10 DIGITS');
    WHEN EMAIL_ISSUE THEN
        DBMS_OUTPUT.PUT_LINE('PLEASE ENTER EMAIL IN VALID FORMAT');
    WHEN INVALID_APPT_DATE THEN
         DBMS_OUTPUT.PUT_LINE('PLEASE ENTER DATE OF BIRTH NO FUTURE VALUES ALLOWED' );
    WHEN EX_DESN_NULL THEN
        DBMS_OUTPUT.PUT_LINE('DESIGNATION CANNOT BE EMPTY');
    WHEN EX_MANAGER_NULL THEN
        DBMS_OUTPUT.PUT_LINE('REPORTING MANAGER CANNOT BE EMPTY');    
    --WHEN OTHERS THEN
    --    DBMS_OUTPUT.PUT_LINE('ENTER VALID INPUTS ');
    ROLLBACK;
END;