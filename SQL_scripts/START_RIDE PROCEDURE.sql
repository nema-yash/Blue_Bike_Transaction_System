create or replace PROCEDURE START_RIDE(B_ID IN BIKE.BIKE_ID%TYPE, EMAIL IN CUSTOMER.EMAIL_ID%TYPE) AS
    CUST_ID CUSTOMER.CUSTOMER_ID%TYPE := NULL;
    BI_ID BIKE.BIKE_ID%TYPE := NULL;
    P_STATUS RENT.PAYMENT_STATUS%TYPE;
    CHECK_WRONG_DATA BOOLEAN := TRUE;
    EMAIL_NULL EXCEPTION;
    EMAIL_WRONG EXCEPTION;
    B_ID_NULL EXCEPTION;
    B_ID_WRONG EXCEPTION;
    B_ID_UNAVAILABLE EXCEPTION;
    P_STATUS_UNPAID EXCEPTION;
BEGIN
    
    IF B_ID IS NULL THEN
        RAISE B_ID_NULL;
    END IF;

    IF EMAIL IS NULL THEN
        RAISE EMAIL_NULL;
    END IF;
    
    BEGIN
        SELECT CUSTOMER_ID INTO CUST_ID FROM CUSTOMER WHERE EMAIL_ID = EMAIL;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('ENTERED EMAIL IS WRONG');
            CHECK_WRONG_DATA := FALSE;
        ROLLBACK;
    END;
    
    BEGIN
        SELECT BIKE_ID INTO BI_ID FROM BIKE WHERE BIKE_ID = B_ID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('ENTERED BIKE ID IS WRONG');
            CHECK_WRONG_DATA := FALSE;
        ROLLBACK;
    END;
    
    BEGIN
        SELECT BIKE_ID INTO BI_ID FROM BIKE WHERE BIKE_STATUS = 'AVAILABLE' AND BIKE_ID = B_ID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('SELECTED BIKE IS NOT AVAILABLE');
            CHECK_WRONG_DATA := FALSE;
        ROLLBACK;
    END;
    
    IF CHECK_WRONG_DATA THEN
        SELECT PAYMENT_STATUS INTO P_STATUS FROM RENT WHERE CUSTOMER_ID = CUST_ID;
        IF P_STATUS = 'UNPAID' THEN
            RAISE P_STATUS_UNPAID;
        END IF;
        
        INSERT INTO RENT VALUES(RENT_ID_SEQUENCE.NEXTVAL, CURRENT_DATE, NULL, B_ID, CUST_ID, NULL, NULL);
        
        COMMIT;
    END IF;

    EXCEPTION
        WHEN B_ID_NULL THEN
            DBMS_OUTPUT.PUT_LINE('BIKE ID CANNOT BE NULL');
        WHEN EMAIL_NULL THEN
            DBMS_OUTPUT.PUT_LINE('EMAIL ID CANNOT BE NULL');
        WHEN P_STATUS_UNPAID THEN
            DBMS_OUTPUT.PUT_LINE('YOU HAVE AN UNPAID TRANSACTION. CLEAR DUES TO BOOK NEW RIDE');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE(SQLERRM);
        ROLLBACK;
END;
/