create or replace PROCEDURE TICKET_CREATION(EMAIL IN CUSTOMER.EMAIL_ID%TYPE, T_TYPE IN TICKETING_QUEUE.TICKET_DESC%TYPE) AS 
EX_EMAIL_NULL EXCEPTION;
USER_DOESNT_EXIST_EXCEP EXCEPTION;
T_TYPE_ISSUE EXCEPTION;
CUSTOMER_CARE_EXCEP EXCEPTION;
VAL NUMBER;
E_ID CUSTOMER_TECHNICIAN_STATE.EMPLOYEE_ID%TYPE;
TIC_ID TICKETING_QUEUE.TICKET_ID%TYPE;

BEGIN
    EXECUTE IMMEDIATE ('SELECT COUNT(*) from (SELECT 1 from dual where REGEXP_LIKE ('''||EMAIL||''', ''^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$''))') INTO VAL;

    IF LENGTH(UPPER(EMAIL)) IS NULL OR VAL<1 THEN
        RAISE EX_EMAIL_NULL;
    END IF;

    EXECUTE IMMEDIATE ('SELECT COUNT(*) FROM CUSTOMER WHERE UPPER(EMAIL_ID)=UPPER('''||EMAIL||''')') INTO VAL;

    IF VAL<1 THEN
        RAISE USER_DOESNT_EXIST_EXCEP;
    END IF;


    IF LENGTH(UPPER(T_TYPE)) IS NULL OR(UPPER(T_TYPE)!='REGISTRATION ISSUE' AND 
                                        UPPER(T_TYPE)!='WALLET SETUP' AND 
                                        UPPER(T_TYPE)!='PAYMENT DEDUCTION ISSUE' AND 
                                        UPPER(T_TYPE)!='BOOKING ISSUE' AND 
                                        UPPER(T_TYPE)!='COUPON ISSUE' AND 
                                        UPPER(T_TYPE)!='DISCOUNT USAGE ISSUE' AND 
                                        UPPER(T_TYPE)!='BIKE AVAILABILITY ISSUE' AND 
                                        UPPER(T_TYPE)!='BIKE CONDITION ISSUE' AND 
                                        UPPER(T_TYPE)!='MEMBERSHIP RENEWAL ISSUES' AND 
                                        UPPER(T_TYPE)!='OTHER ISSUES')THEN
        RAISE T_TYPE_ISSUE;
    END IF;

    EXECUTE IMMEDIATE ('SELECT COUNT(*) FROM CUSTOMER_TECHNICIAN_STATE WHERE CUSTOMER_TECHNICIAN_STATUS=''AVAILABLE''') INTO VAL;

    IF VAL<1 THEN
        RAISE CUSTOMER_CARE_EXCEP;
    END IF;    

    SELECT EMPLOYEE_ID INTO E_ID FROM CUSTOMER_TECHNICIAN_STATE WHERE EMPLOYEE_ID=(SELECT MIN(EMPLOYEE_ID) FROM CUSTOMER_TECHNICIAN_STATE WHERE CUSTOMER_TECHNICIAN_STATUS='AVAILABLE');

    UPDATE CUSTOMER_TECHNICIAN_STATE SET CUSTOMER_TECHNICIAN_STATUS='UNAVAILABLE' WHERE EMPLOYEE_ID=E_ID;

    EXECUTE IMMEDIATE ('SELECT COUNT(*) FROM TICKETING_QUEUE') INTO VAL;
    IF VAL=0 THEN
        TIC_ID:=100000000;
    ELSIF VAL>0 THEN
        SELECT TICKET_ID INTO TIC_ID FROM TICKETING_QUEUE WHERE TICKET_ID=(SELECT MAX(TICKET_ID) FROM TICKETING_QUEUE);
        TIC_ID:=TIC_ID+1;
    END IF;  


    INSERT INTO TICKETING_QUEUE VALUES (TIC_ID,(SELECT CUSTOMER_ID FROM CUSTOMER WHERE UPPER(EMAIL_ID)=UPPER(EMAIL)),E_ID,T_TYPE,'ASSIGNED');

    DBMS_OUTPUT.PUT_LINE('TICKET ASSIGNED');
    COMMIT;

EXCEPTION
    WHEN EX_EMAIL_NULL THEN
        DBMS_OUTPUT.PUT_LINE('EMAIL ID FORMAT IS INCORRECT, TRY AGAIN');
     when USER_DOESNT_EXIST_EXCEP then
            dbms_output.put_line('CUSTOMER DOES NOT EXIST, REGISTER FIRST');
    WHEN T_TYPE_ISSUE THEN
        DBMS_OUTPUT.PUT_LINE('PRINT ISSUE OPTIONS AGAIN AND ENTER THE CORRECT TICKET TYPE DESCRIPTION');
    WHEN CUSTOMER_CARE_EXCEP THEN
        DBMS_OUTPUT.PUT_LINE('CUSTOMER TECHNICIAN NOT AVAILABLE, TRY AGAIN SOON');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
    ROLLBACK;
END;